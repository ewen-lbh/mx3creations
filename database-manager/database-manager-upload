#!/usr/bin/env node
const program = require('commander')
const ora = require('ora')
const scp = require('scp')
const path = require('path')
const boxen = require('boxen')
const consola = require('consola')
const columnify = require('columnify')
const chalk = require('chalk')
const wrapAnsi = require('wrap-ansi')

program
  .option('--in [path]', 'Upload the file to this directory', null, '~')
  .parse(process.argv)

const [user, host] = program.args[1].split('@')
const absolutePath = path.resolve('.', program.args[0])
const targetPath = path.join(program.in, path.basename(program.args[0]))
const colorizePath = (pathStr, { fragmentStyle, sepStyle } =  { fragmentStyle: 'bold', sepStyle: 'dim' }) => {
  const fragments = pathStr.split('/')
  const output = fragments.map((f) => chalk[fragmentStyle](f)).join(chalk[sepStyle]('/'))
  return output
}

consola.info(
  `Upload information: \n` +
  boxen(
    columnify({
      [chalk`{cyan user}`]: user,
      [chalk`{cyan host}`]: host,
      [chalk`{cyan file}`]: colorizePath(absolutePath),
      [chalk`{cyan upload to}`]: colorizePath(targetPath)
    }, {
      showHeaders: false,
      columnSplitter: '   '
    }),
    {
      borderStyle: 'round',
      borderColor: 'cyanBright',
      padding: 1,
      margin: 1
    }
  )
)
const sshArgsPrettyStr = chalk`{bold {yellow ${path.basename(absolutePath)}}} to {bold {cyan ${user}}@{cyan ${host}}:{yellow ${targetPath}}}`
const spinner = ora(`Uploading ${sshArgsPrettyStr}...`).start()

scp.send({
  file: absolutePath,
  user, host,
  port: '22',
  path: targetPath
}, (err, stdout, stderr) => {
  if (err) {
    spinner.fail(chalk`An error occured while uploading:`)
    console.log(boxen(wrapAnsi(chalk.red(stderr), 50), { borderColor: 'redBright', borderStyle: 'round', padding: 1, margin: 1 }))
  } else {
    spinner.succeed(chalk`Uploaded ${sshArgsPrettyStr}`)
  }
})
